"""Integrate ChatKnowledge in Document

Revision ID: 926edfec6224
Revises: c6433af31b6f
Create Date: 2025-08-07 13:40:03.976497

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import pgvector.sqlalchemy

# revision identifiers, used by Alembic.
revision = '926edfec6224'
down_revision = 'c6433af31b6f'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Safely drop table if it exists
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    if 'chat_knowledge' in inspector.get_table_names():
        op.drop_table('chat_knowledge')
    op.add_column('document_chunks', sa.Column('chunk_metadata', sa.Text(), nullable=True))
    op.add_column('document_chunks', sa.Column('summary', sa.Text(), nullable=True))
    op.drop_column('document_chunks', 'document_metadata')
    op.add_column('documents', sa.Column('title', sa.String(length=255), nullable=False))
    op.add_column('documents', sa.Column('source_type', sa.String(length=50), nullable=False))
    op.add_column('documents', sa.Column('source_id', sa.String(length=255), nullable=True))
    op.add_column('documents', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.alter_column('documents', 'filename',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('documents', 'file_type',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('documents', 'file_size',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('documents', 'content')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('documents', sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False))
    op.alter_column('documents', 'file_size',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('documents', 'file_type',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('documents', 'filename',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.drop_column('documents', 'updated_at')
    op.drop_column('documents', 'source_id')
    op.drop_column('documents', 'source_type')
    op.drop_column('documents', 'title')
    op.add_column('document_chunks', sa.Column('document_metadata', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_column('document_chunks', 'summary')
    op.drop_column('document_chunks', 'chunk_metadata')
    op.create_table('chat_knowledge',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('chat_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('chunk_index', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('message_ids', postgresql.ARRAY(sa.UUID()), autoincrement=False, nullable=True),
    sa.Column('summary', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('token_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.Vector(dim=1536), autoincrement=False, nullable=False),
    sa.Column('chunk_metadata', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.id'], name='chat_knowledge_chat_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='chat_knowledge_pkey')
    )
    # ### end Alembic commands ###